/*globals define, WebGMEGlobal*/
/*jshint browser: true*/

/**
 * Generated by VisualizerGenerator 1.7.0 from webgme on Sun Nov 27 2016 14:49:19 GMT-0600 (Central Standard Time).
 */

define(['css!./styles/OCLEditorWidget.css',
        'text!./OCLEditor.html',
        './lib/cm/lib/codemirror',
        // Syntax highlighting
        './lib/cm/mode/clike/clike',
        './lib/cm/mode/markdown/markdown',
        './lib/cm/mode/javascript/javascript',
        './lib/cm/mode/python/python',
        './lib/cm/mode/diff/diff',
        './lib/cm/mode/cmake/cmake',
        './lib/cm/mode/coffeescript/coffeescript',
        './lib/cm/mode/css/css',
        './lib/cm/mode/dockerfile/dockerfile',
        './lib/cm/mode/erlang/erlang',
        './lib/cm/mode/fortran/fortran',
        './lib/cm/mode/gfm/gfm',
        './lib/cm/mode/go/go',
        './lib/cm/mode/handlebars/handlebars',
        './lib/cm/mode/haskell/haskell',
        './lib/cm/mode/htmlembedded/htmlembedded',
        './lib/cm/mode/htmlmixed/htmlmixed',
        './lib/cm/mode/idl/idl',
        './lib/cm/mode/lua/lua',
        './lib/cm/mode/mathematica/mathematica',
        './lib/cm/mode/modelica/modelica',
        './lib/cm/mode/nginx/nginx',
        './lib/cm/mode/pascal/pascal',
        './lib/cm/mode/perl/perl',
        './lib/cm/mode/php/php',
        './lib/cm/mode/protobuf/protobuf',
        './lib/cm/mode/r/r',
        './lib/cm/mode/rst/rst',
        './lib/cm/mode/ruby/ruby',
        './lib/cm/mode/shell/shell',
        './lib/cm/mode/spreadsheet/spreadsheet',
        './lib/cm/mode/tcl/tcl',
        './lib/cm/mode/stex/stex',
        './lib/cm/mode/textile/textile',
        './lib/cm/mode/vhdl/vhdl',
        './lib/cm/mode/verilog/verilog',
        './lib/cm/mode/xml/xml',
        './lib/cm/mode/yaml/yaml',
        './lib/cm/mode/yaml-frontmatter/yaml-frontmatter',
        // Keymaps
        './lib/cm/keymap/emacs',
        './lib/cm/keymap/sublime',
        './lib/cm/keymap/vim',
        // Addons
        './lib/cm/addon/lint/lint',
        './lib/cm/addon/lint/json-lint',
        './lib/cm/addon/lint/jsonlint',
        './lib/cm/addon/lint/javascript-lint',
        './lib/cm/addon/lint/coffeescript-lint',
        './lib/cm/addon/lint/yaml-lint',
        './lib/cm/addon/hint/show-hint',
        './lib/cm/addon/hint/anyword-hint',
        './lib/cm/addon/hint/css-hint',
        './lib/cm/addon/hint/html-hint',
        './lib/cm/addon/hint/javascript-hint',
        './lib/cm/addon/hint/sql-hint',
        './lib/cm/addon/hint/xml-hint',
        './lib/cm/addon/search/search',
        './lib/cm/addon/search/searchcursor',
        './lib/cm/addon/search/matchesonscrollbar',
        './lib/cm/addon/search/match-highlighter',
        './lib/cm/addon/search/jump-to-line',
        './lib/cm/addon/scroll/annotatescrollbar',
        './lib/cm/addon/dialog/dialog',
        './lib/cm/addon/display/fullscreen',
        './lib/cm/addon/fold/foldcode',
        './lib/cm/addon/fold/foldgutter',
        './lib/cm/addon/fold/brace-fold',
        './lib/cm/addon/fold/xml-fold',
        './lib/cm/addon/fold/markdown-fold',
        './lib/cm/addon/fold/comment-fold',
        // CSS
        'css!./styles/OCLEditorWidget.css',
        'css!./lib/cm/addon/lint/lint.css',
        'css!./lib/cm/addon/hint/show-hint.css',
        'css!./lib/cm/addon/search/matchesonscrollbar.css',
        'css!./lib/cm/addon/dialog/dialog.css',
        'css!./lib/cm/addon/display/fullscreen.css',
        'css!./lib/cm/theme/night.css',
        'css!./lib/cm/lib/codemirror.css',
        'css!./lib/cm/theme/3024-day.css',
        'css!./lib/cm/theme/3024-night.css',
        'css!./lib/cm/theme/abcdef.css',
        'css!./lib/cm/theme/ambiance.css',
        'css!./lib/cm/theme/base16-dark.css',
        'css!./lib/cm/theme/bespin.css',
        'css!./lib/cm/theme/base16-light.css',
        'css!./lib/cm/theme/blackboard.css',
        'css!./lib/cm/theme/cobalt.css',
        'css!./lib/cm/theme/colorforth.css',
        'css!./lib/cm/theme/dracula.css',
        'css!./lib/cm/theme/eclipse.css',
        'css!./lib/cm/theme/elegant.css',
        'css!./lib/cm/theme/erlang-dark.css',
        'css!./lib/cm/theme/hopscotch.css',
        'css!./lib/cm/theme/icecoder.css',
        'css!./lib/cm/theme/isotope.css',
        'css!./lib/cm/theme/lesser-dark.css',
        'css!./lib/cm/theme/liquibyte.css',
        'css!./lib/cm/theme/material.css',
        'css!./lib/cm/theme/mbo.css',
        'css!./lib/cm/theme/mdn-like.css',
        'css!./lib/cm/theme/midnight.css',
        'css!./lib/cm/theme/monokai.css',
        'css!./lib/cm/theme/neat.css',
        'css!./lib/cm/theme/neo.css',
        'css!./lib/cm/theme/night.css',
        'css!./lib/cm/theme/paraiso-dark.css',
        'css!./lib/cm/theme/paraiso-light.css',
        'css!./lib/cm/theme/pastel-on-dark.css',
        'css!./lib/cm/theme/railscasts.css',
        'css!./lib/cm/theme/rubyblue.css',
        'css!./lib/cm/theme/seti.css',
        'css!./lib/cm/theme/solarized.css',
        'css!./lib/cm/theme/the-matrix.css',
        'css!./lib/cm/theme/tomorrow-night-bright.css',
        'css!./lib/cm/theme/tomorrow-night-eighties.css',
        'css!./lib/cm/theme/ttcn.css',
        'css!./lib/cm/theme/twilight.css',
        'css!./lib/cm/theme/vibrant-ink.css',
        'css!./lib/cm/theme/xq-dark.css',
        'css!./lib/cm/theme/xq-light.css',
        'css!./lib/cm/theme/yeti.css',
        'css!./lib/cm/theme/zenburn.css',
        'css!./lib/cm/addon/fold/foldgutter'
    ],
    function (
        OCLEditorHtml,
        CodeMirror,
        // Syntax Highlighting
        CodeMirrorModeClike,
        CodeMirrorModeMarkdown,
        CodeMirrorModeJavascript,
        CodeMirrorModePython,
        CodeMirrorModediff,
        CodeMirrorModecmake,
        CodeMirrorModecoffeescript,
        CodeMirrorModecss,
        CodeMirrorModedockerfile,
        CodeMirrorModeerlang,
        CodeMirrorModefortran,
        CodeMirrorModegfm,
        CodeMirrorModego,
        CodeMirrorModehandlebars,
        CodeMirrorModehaskell,
        CodeMirrorModehtmlembedded,
        CodeMirrorModehtmlmixed,
        CodeMirrorModeidl,
        CodeMirrorModelua,
        CodeMirrorModemathematica,
        CodeMirrorModemodelica,
        CodeMirrorModenginx,
        CodeMirrorModepascal,
        CodeMirrorModeperl,
        CodeMirrorModephp,
        CodeMirrorModeprotobuf,
        CodeMirrorModer,
        CodeMirrorModerst,
        CodeMirrorModeruby,
        CodeMirrorModeshell,
        CodeMirrorModespreadsheet,
        CodeMirrorModetcl,
        CodeMirrorModestex,
        CodeMirrorModetextile,
        CodeMirrorModevhdl,
        CodeMirrorModeverilog,
        CodeMirrorModexml,
        CodeMirrorModeyaml,
        CodeMirrorModeyamlfrontmatter,
        // Keymaps
        CodeMirrorEmacsKeymap,
        CodeMirrorSublimeKeymap,
        CodeMirrorVimKeymap,
        // Addons
        CodeMirrorLint,
        CodeMirrorJSONLint,
        jsonlint,
        CodeMirrorJSLint,
        CodeMirrorCSLint,
        CodeMirrorYAMLLint,
        CodeMirrorShowHint,
        CodeMirrorAnywordHint,
        CodeMirrorCSSHint,
        CodeMirrorHTMLHint,
        CodeMirrorJSHint,
        CodeMirrorSQLHint,
        CodeMirrorXMLHint,
        CodeMirrorSearch,
        CodeMirrorSearchCursor,
        CodeMirrorMatchesOnScrollbar,
        CodeMirrorMatchHighlighter,
        CodeMirrorJumpToLine,
        CodeMirrorAnnotateScrollbar,
        CodeMirrorDialog,
        CodeMirrorFullScreen,
        CodeMirrorFoldCode,
        CodeMirrorFoldGutter,
        CodeMirrorBraceFold,
        CodeMirrorXMLFold,
        CodeMirrorMarkdownFold,
        CodeMirrorCommentFold
    ) {
    'use strict';

    var OCLEditorWidget,
        WIDGET_CLASS = 'o-c-l-editor';

    OCLEditorWidget = function (logger, container) {
        this._logger = logger.fork('Widget');

        this._el = container;

        this.nodes = {};
        this._initialize();

        this._logger.debug('ctor finished');
    };

    OCLEditorWidget.prototype._initialize = function () {
        var width = this._el.width(),
            height = this._el.height(),
            self = this;

        // set widget class
        this._el.addClass(WIDGET_CLASS);

        this._el.append(OCLEditorHtml);
        this._codearea = this._el.find('#oclarea').first();
        this._title = this._el.find('#ocl_editor_title');
        this.selectedAttribute = null;
        this.selectedNode = null;

        /*var mac = CodeMirror.keyMap.default == CodeMirror.keyMap.macDefault;
        CodeMirror.keyMap.default[(mac ? "Cmd" : "Ctrl") + "-Space"] = "autocomplete";
        CodeMirror.keyMap.sublime[(mac ? "Cmd" : "Ctrl") + "-Space"] = "autocomplete";
        CodeMirror.keyMap.emacs[(mac ? "Cmd" : "Ctrl") + "-Space"] = "autocomplete";
        CodeMirror.keyMap.vim[(mac ? "Cmd" : "Ctrl") + "-Space"] = "autocomplete";
*/
        var CodeMirrorEditorOptions = {
            readOnly: this._readOnly,
            lineNumbers: true,
            matchBrackets: true,
            lint: true,
            //viewPortMargin: Infinity,
            path: './lib/cm/lib/',

            fullscreen: false,
            foldGutter: true,
            gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter", "CodeMirror-lint-markers"]
        };
        this.editor = new CodeMirror.fromTextArea(
            this._codearea.get(0),
            CodeMirrorEditorOptions
        );

        this.editor.on(
            'change',
            _.debounce(this.saveChanges.bind(this), +this._config.autoSaveInterval)
        );

        // Create a dummy header 
        this._el.append('<h3>OCLEditor Events:</h3>');

        // Registering to events can be done with jQuery (as normal)
        this._el.on('dblclick', function (event) {
            event.stopPropagation();
            event.preventDefault();
            self.onBackgroundDblClick();
        });
    };

    OCLEditorWidget.prototype.onWidgetContainerResize = function (width, height) {
        this._logger.debug('Widget is resizing...');
    };

    // Adding/Removing/Updating items
    OCLEditorWidget.prototype.addNode = function (desc) {
        if (desc) {
            // Add node to a table of nodes
            var node = document.createElement('div'),
                label = 'children';

            if (desc.childrenIds.length === 1) {
                label = 'child';
            }

            this.nodes[desc.id] = desc;
            node.innerHTML = 'Adding node "' + desc.name + '" (click to view). It has ' + 
                desc.childrenIds.length + ' ' + label + '.';

            this._el.append(node);
            node.onclick = this.onNodeClick.bind(this, desc.id);
        }
    };

    OCLEditorWidget.prototype.removeNode = function (gmeId) {
        var desc = this.nodes[gmeId];
        this._el.append('<div>Removing node "' + desc.name + '"</div>');
        delete this.nodes[gmeId];
    };

    OCLEditorWidget.prototype.updateNode = function (desc) {
        if (desc) {
            this._logger.debug('Updating node:', desc);
            this._el.append('<div>Updating node "' + desc.name + '"</div>');
        }
    };

    /* * * * * * * * Visualizer event handlers * * * * * * * */

    OCLEditorWidget.prototype.onNodeClick = function (/*id*/) {
        // This currently changes the active node to the given id and
        // this is overridden in the controller.
    };

    OCLEditorWidget.prototype.onBackgroundDblClick = function () {
        this._el.append('<div>Background was double-clicked!!</div>');
    };

    /* * * * * * * * Visualizer life cycle callbacks * * * * * * * */
    OCLEditorWidget.prototype.destroy = function () {
    };

    OCLEditorWidget.prototype.onActivate = function () {
        this._logger.debug('OCLEditorWidget has been activated');
    };

    OCLEditorWidget.prototype.onDeactivate = function () {
        this._logger.debug('OCLEditorWidget has been deactivated');
    };

        OCLEditorWidget.getName = function () {
            return 'OCLEditor';
        };

        OCLEditorWidget.getVersion = function () {
            return '0.1.0';
        };

        OCLEditorWidget.getDefaultConfig = function () {
            return {
                'theme': 'default',
                'keyBinding': 'sublime',
                'defaultSyntax': 'cpp',
                'syntaxToModeMap': {},
                'autoSaveInterval': 2000,
                'attrToSyntaxMap': {}
            };
        };

        OCLEditorWidget.getComponentId = function () {
            return 'OCLEditor';
        };

    return OCLEditorWidget;
});
